#!/usr/bin/perl

=begin metadata

Name: rev
Description: reverse lines of a file
Author: Andy Murren, andy@murren.org
License: gpl

=end metadata

=cut

use strict;

use File::Basename qw(basename);

use constant EX_SUCCESS => 0;
use constant EX_FAILURE => 1;

my $Program = basename($0);

# unbuffer output to make it look speedier
$|++;

my ($VERSION) = '1.4';

my $rc = EX_SUCCESS;
if (scalar(@ARGV) == 0 || $ARGV[0] !~ m/^-./) {
	if (@ARGV) {
		foreach my $file (@ARGV) {
			if (-d $file) {
				warn "$Program: '$file' is a directory\n";
				$rc = EX_FAILURE;
				next;
			}
			my $fh;
			unless (open $fh, '<', $file) {
				warn "$Program: cannot open '$file': $!\n";
				$rc = EX_FAILURE;
				next;
			}
			rev($fh);
			if ($!) {
				warn "$Program: '$file': $!\n";
				$rc = EX_FAILURE;
			}
		}
	} else {
		rev(*STDIN);
	}
}
elsif ($ARGV[0] eq '--version') {
	print " $Program $VERSION\n";
}
else {
	print <<EOF;
Usage: $Program [OPTION] [FILE]

Reverses lines of the named file or the text input on STDIN

Options:
	--version:  Print version number, then exit.
	--help || -h:     Print usage, then exit;

EOF
	exit EX_FAILURE;
}

exit $rc;

sub rev {
	my $fh = shift;
	while (<$fh>) {
		chomp;
		my $r = reverse;
		print $r, $/;
	}
}

__END__

=pod

=head1 NAME

rev - reverse lines of a file

=head1 SYNOPSIS

rev [options] [file]

=head1 DESCRIPTION

The rev utility copies the specified files to the standard output,
reversing the order of characters in every line.  If no files are
specified, the standard input is read.

=head2 OPTIONS

I<rev> accepts the following options:

=over 4

=item  --help || -h

Print a short help message, then exits.

=item  --version

Prints out its version number, then exits.

=back

=head1 BUGS

I<rev> has no known bugs.

=head1 AUTHOR

This Perl implementation of I<rev> was written by Andy Murren,
I<andy@murren.org>.

=head1 COPYRIGHT and LICENSE

This program is covered by the GNU Public License (GPL).
See I<http://www.gnu.org/copyleft/gpl.html> for complete detail of the license.

=cut
