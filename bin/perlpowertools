#!/usr/bin/env perl
#
# perlpowertools - helper script for PerlPowerTools

use strict;
use warnings;
use utf8;
use Getopt::Std;
use File::Basename;
use Cwd 'abs_path';

our $VERSION = qw( 1.024 );
my $program  = 'perlpowertools';
my @tools    = qw( addbib apply ar arch arithmetic asa awk banner basename bc cal cat chgrp ching chmod chown clear cmp col colrm comm cp cut date dc deroff diff dirname du echo ed env expand expr factor false file find fish fmt fold fortune from glob grep hangman head id install join kill ln lock look ls mail man maze mimedecode mkdir mkfifo moo morse nl od par paste patch perldoc pig ping pom ppt pr primes printenv printf pwd rain random rev rm rmdir robots rot13 shar sleep sort spell split strings sum tac tail tar tee test time touch tr true tsort tty uname unexpand uniq units unpar unshar uudecode uuencode wc what which whois words wump xargs yes );
my $usage    = <<EOF;

Usage: $program [-hVl]
       $program tool [arg ...]

    -h, --help      help
    -V, --version   version
    -l              list tools
EOF

# options
$Getopt::Std::STANDARD_HELP_VERSION = 1;
my %options = ();
getopts("hVl", \%options) or die $usage;

my $help        = $options{h} || 0;
my $version     = $options{V} || 0;
my $list        = $options{l} || 0;

die $usage if $help;
die $VERSION . "\n" if $version;
die join ("\n", @tools) . "\n" if $list;

########
# MAIN #
########

my $tool = shift || '';
die $usage if not grep { $tool eq $_ } @tools;

my $file = defined $ENV{PAR_TEMP} ? "$ENV{PAR_TEMP}/inc/script/$tool" : dirname(abs_path($0)) . "/$tool";
$0 = $file; # for correct usage/warning/error messages
my $return = do $file;
die $@ if $@;
die "$file: $!" unless defined $return;

exit 1;
