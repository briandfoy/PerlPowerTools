#!/usr/bin/env perl
#
# perlpowertools - helper script for PerlPowerTools

=begin metadata

Name: perlpowertools
Description: a program launcher for Perl Power Tools
Author: kal247, https://github.com/kal247
License: artistic2

=end metadata

=cut

use strict;
use warnings;
use utf8;
use Getopt::Std;
use File::Basename;
use Cwd 'abs_path';

our $VERSION = qw( 1.025 );
my $program  = 'perlpowertools';
my @tools    = qw( addbib apply ar arch arithmetic asa awk banner base64
 basename bc bcd cal cat chgrp ching chmod chown clear cmp col colrm comm cp
 cut date dc deroff diff dirname du echo ed env expand expr factor false file
 find fish fmt fold fortune from glob grep hangman head hexdump id install
 join kill ln lock look ls mail maze mimedecode mkdir mkfifo moo morse nl od
 par paste patch perldoc pig ping pom ppt pr primes printenv printf pwd rain
 random rev rm rmdir robots rot13 seq shar sleep sort spell split strings sum
 tac tail tar tee test time touch tr true tsort tty uname unexpand uniq units
 unlink unpar unshar uudecode uuencode wc what which whoami whois words wump
 xargs yes );
my $usage    = <<EOF;

Usage: $program [-hVl]
       $program tool [arg ...]

    -h, --help      help
    -V, --version   version
    -l              list tools
EOF

# options
$Getopt::Std::STANDARD_HELP_VERSION = 1;
my %options = ();
getopts("hVl", \%options) or die $usage;
die $usage if $options{'h'};
if ($options{'V'}) {
    print $VERSION, "\n";
    exit;
}
if ($options{'l'}) {
    print join ("\n", @tools), "\n";
    exit;
}

########
# MAIN #
########

my $tool = shift || '';
die $usage if not grep { $tool eq $_ } @tools;

my $file = defined $ENV{PAR_TEMP} ? "$ENV{PAR_TEMP}/inc/script/$tool" : dirname(abs_path($0)) . "/$tool";
$0 = $tool; # for usage/warning/error messages
my $return = do $file;
die $@ if $@;
die "$file: $!" unless defined $return;

exit 1;
