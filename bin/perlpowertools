#!/usr/bin/env perl
#
# perlpowertools - helper script for PerlPowerTools

=begin metadata

Name: perlpowertools
Description: helper script for PerlPowerTools
Author: jul, kaldor@cpan.org
License: Artistic License 2.0

=end metadata

=cut

use strict;
use warnings;
use utf8;
use Getopt::Std;
use File::Basename;
use Cwd qw (abs_path cwd);
my $ppt_dir;
BEGIN { $ppt_dir = dirname(abs_path($0)) . '/..' };
use lib $ppt_dir . '/lib';
use PerlPowerTools;

our $VERSION = $PerlPowerTools::VERSION;
my $program  = 'perlpowertools';
my $usage    = <<EOF;

Usage: $program [-hVl]
       $program tool [arg ...]

    -h, --help      help
    -V, --version   version
    -l              list tools
EOF

# options
$Getopt::Std::STANDARD_HELP_VERSION = 1;
my %options = ();
getopts("hVl", \%options) or die $usage;

my $help        = $options{h} || 0;
my $version     = $options{V} || 0;
my $list        = $options{l} || 0;

die $usage if $help;
die $VERSION . "\n" if $version;

my $tool = shift || '';

########
# MAIN #
########

my $ppt_bin = defined $ENV{PAR_TEMP} ? "$ENV{PAR_TEMP}/inc/script" : dirname(abs_path($0));
my $cwd = cwd;
chdir $ppt_bin;
my @tools = glob("*");
chdir $cwd;
@tools = grep { $_ ne "$program" } @tools;

die join ("\n", @tools) . "\n" if $list;
die $usage if not grep { $tool eq $_ } @tools;

my $file = "$ppt_bin/$tool";
$0 = $tool; # for usage/warning/error messages
package PerlPowerTools; # change caller(0), for modulinos
my $return = do $file;
die $@ if $@;
die "$file: $!" unless defined $return;

exit 1;
